# Ultra-optimized distroless build
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.local/bin:$PATH"

WORKDIR /app

# Copy and install dependencies
COPY requirements.txt ./
RUN pip install --no-cache-dir --user -r requirements.txt

# Install Playwright browsers
RUN playwright install chromium --with-deps

# Clean up Playwright aggressively
RUN rm -rf /root/.cache/ms-playwright/chromium-*/chrome-linux/chrome_*/interactive_ui_tests && \
    rm -rf /root/.cache/ms-playwright/chromium-*/chrome-linux/chrome_*/test_data && \
    rm -rf /root/.cache/ms-playwright/chromium-*/chrome-linux/chrome_*/locales/*.pak && \
    find /root/.cache/ms-playwright -name "*.pdb" -delete && \
    find /root/.cache/ms-playwright -name "*.so.debug" -delete && \
    find /root/.cache/ms-playwright -name "*.dmp" -delete

# Production stage with distroless base
FROM gcr.io/distroless/python3-debian11

# Copy Python packages and application
COPY --from=builder /root/.local /root/.local
COPY --from=builder /app/app /app/app
COPY --from=builder /root/.cache/ms-playwright /root/.cache/ms-playwright

# Set environment
ENV PATH="/root/.local/bin:$PATH"
ENV PYTHONPATH="/app"

WORKDIR /app

# Create data directory
RUN mkdir -p /app/data

# Expose port
EXPOSE 8000

# Run as non-root
USER 65532:65532

# Command
CMD ["/root/.local/bin/uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
